# -*- coding: utf-8 -*-
"""oops concept

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tvAo2UJK0VVRIEmWdWMQQgDD2muRjB2q
"""

#class oops
class dog:
  def bark(self):
    print("bow bow")
animal=dog()
animal.bark()

#self s=object boy= class
class boy:
  def set_name(self,name):
    self.name=name
  def get_name(self):
    return self.name
s=boy()
s.set_name("sai")
print(s.get_name())

#a.o by using obj instance
class calc:
  def add(self,a,b):
    return a+b
  def sub(self,a,b):
    return a-b
  def mul(self,a,b):
    return a*b
c=calc()
print(c.add(3,4))
print(c.sub(3,3))
print(c.mul(3,4))

class operations:
  def set_values(self,a,b):
    self.a=a
    self.b=b
  def add(self):
    return self.a+self.b
c=operations()
c.set_values(3,2)
print(c.add())

'''code for calculating the area of a square by creating a class square and defining the area and perameter functions and return the both values to the object'''
class square:
  def set_values(self,a):
    self.a=a
  def area(self):
    return self.a**2
  def perimeter(self):
    return 4*self.a
s=square()
s.set_values(3)
print(s.area())
print(s.perimeter())

'''find the hypothesis of pythagorean theorem c= sqrt a square + bsquare'''
class hypothesis:
  def set_values(self,a,b):
    self.a=a
    self.b=b
  def pythagorean(self):
    return (self.a**2+self.b**2)**0.5
h=hypothesis()
h.set_values(3,4)
print(h.pythagorean())

#code for a class method to call a function,which is defined in global namespace
def globe(x):
  return x**10
class abc()
  def __init__(self,var):
    self.var=var
  def display(self):
    print("var:",self.var)
  def modify(self):
    self.var=globe(self.)



obj=abc(10)
obj.display()
obj.modify()
obj.display()